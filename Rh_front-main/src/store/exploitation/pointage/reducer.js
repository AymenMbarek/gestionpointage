import pointage from "pages/Exploitation/Pointage"
import {
  GET_POINTAGES,
  GET_POINTAGES_FAIL,
  GET_POINTAGES_SUCCESS,
  ADD_POINTAGE_SUCCESS,
  ADD_POINTAGE_FAIL,
  UPDATE_POINTAGE_SUCCESS,
  UPDATE_POINTAGE_FAIL,
  DELETE_POINTAGE_FAIL,
  DELETE_POINTAGE_SUCCESS

} from "./actionTypes"

const initialState = {
  pointages: [],
  pointage: {},
  loading: false,
  error: null,
}

const Pointage = (state = initialState, action) => {
  switch (action.type) {
    case GET_POINTAGES:
      state = {
        ...state,
        loading: true,
        error: null,
      }
      break
    case GET_POINTAGES_SUCCESS:
      console.log("payload",action)
      return {
        ...state,
        pointages: action.payload,
      }
      break
    case GET_POINTAGES_FAIL:
      console.log("failed",action)
      return {
        ...state,
        error: action.payload,
      }
      case ADD_POINTAGE_SUCCESS:
        return {
          ...state,
          pointages: [...state.pointages, action.payload],
        }
  
      case ADD_POINTAGE_FAIL:
        return {
          ...state,
          error: action.payload,
        }
        case UPDATE_POINTAGE_SUCCESS:
          console.log("pointage update",action.payload)
          return {
            ...state,
            pointages: state.pointages.map(pointage =>
              pointage.banqueId.toString() === action.payload.banqueId.toString()
                ? { pointage, ...action.payload }
                : pointage
            ),
          }
          case DELETE_POINTAGE_SUCCESS:
            return {
              ...state,
              pointages: state.pointages.filter(
                pointage => pointage.banqueId.toString() !== action.payload.banqueId.toString()
              ),
            }
      
          case DELETE_POINTAGE_FAIL:
            return {
              ...state,
              error: action.payload,
            }
    
        case UPDATE_POINTAGE_FAIL:
          return {
            ...state,
            error: action.payload,
          }
  }
  return state
}

export default Pointage
