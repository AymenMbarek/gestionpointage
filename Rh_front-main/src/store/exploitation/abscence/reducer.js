import absence from "pages/Exploitation/Absence/index"
import {
  GET_ABSENCES,
  GET_ABSENCES_FAIL,
  GET_ABSENCES_SUCCESS,
  ADD_ABSENCE_SUCCESS,
  ADD_ABSENCE_FAIL,
  UPDATE_ABSENCE_SUCCESS,
  UPDATE_ABSENCE_FAIL,
  DELETE_ABSENCE_FAIL,
  DELETE_ABSENCE_SUCCESS,
  GET_ABSENCE_SUCCESS

} from "./actionTypes"

const initialState = {
  absences: [],
  absence: null,
  loading: false,
  error: null,
}

const Absence = (state = initialState, action) => {
  switch (action.type) {
    case GET_ABSENCES:
      state = {
        ...state,
        loading: true,
        error: null,
      }
      break
    case GET_ABSENCES_SUCCESS:
      console.log("payload",action)
      return {
        ...state,
        absences: action.payload,
      }
      break
    case GET_ABSENCE_SUCCESS:
      console.log("payload",action)
      return {
        ...state,
        absence: action.payload,
      }
      break
    case GET_ABSENCES_FAIL:
      console.log("failed",action)
      return {
        ...state,
        error: action.payload,
      }
      case ADD_ABSENCE_SUCCESS:
        return {
          ...state,
          absences: [...state.absences, action.payload],
        }
  
      case ADD_ABSENCE_FAIL:
        return {
          ...state,
          error: action.payload,
        }
        case UPDATE_ABSENCE_SUCCESS:
          console.log("absence update",action.payload)
          return {
            ...state,
            absences: state.absences.map(absence =>
              absence.id.toString() === action.payload.id.toString()
                ? { absence, ...action.payload }
                : absence
            ),
          }
          case DELETE_ABSENCE_SUCCESS:
            return {
              ...state,
              absences: state.absences.filter(
                absence => absence.id.toString() !== action.payload.id.toString()
              ),
            }
      
          case DELETE_ABSENCE_FAIL:
            return {
              ...state,
              error: action.payload,
            }
    
        case UPDATE_ABSENCE_FAIL:
          return {
            ...state,
            error: action.payload,
          }
  }
  return state
}

export default Absence
