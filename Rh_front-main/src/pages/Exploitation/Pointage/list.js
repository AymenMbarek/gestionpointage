import MetaTags from 'react-meta-tags'
import React, { useState, forwardRef,useEffect } from "react"
import { Link } from "react-router-dom"
import SweetAlert from "react-bootstrap-sweetalert"
import {Modal, ModalHeader, ModalBody, Button,Label, CardTitle, Input, Card, Form , CardBody,Col, Row } from "reactstrap"



import '../table.css';
import MaterialTable from 'material-table'

import { Edit } from '@material-ui/icons'
import PropTypes from "prop-types"
import { getPointages ,getPointagesSuccess,addNewPointage,updatePointage,deletePointage, apiError, getPointagesFail} from "../../../store/actions"
import { connect } from "react-redux"

const tableIcons = {
  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),
  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),
  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} style={{color: "primary"}}/>),
}

//Import Breadcrumb
import Breadcrumbs from "../../../components/Common/Breadcrumb"
//import './personne.css';
const Pointage = props =>  {



  /*start useeffect*/
  useEffect(() => {
    console.log("props pointages",props)
    props.getPointages()
  }, [])

  /* end useffect */
  const deletePointage = (pointage) => {
    console.log("pointage to delete",pointage)
    // props.addNewPointage(values)
    setSelectedPointage(pointage)
    setconfirm_alert(true)
  }




  return (
      <React.Fragment>
        <div className="page-content">
          <MetaTags>
            <title>Pointage</title>
          </MetaTags>
          <div className="container-fluid">
            <Breadcrumbs maintitle="Exploitation" title="Pointage" breadcrumbItem="Saisie" />
            <Row>
              <Col lg={12}>
                <Card>
                  <CardBody>
                    <div className="form-horizontal clearfix">
                      <CardTitle className="h4">Filtrage</CardTitle>
                      <hr/>
                      <Form>


                        <div className="row">
                          <div className="col-lg-3">
                            <div className="mb-3" >
                              <Label className="form-label" htmlFor="date"  >  Date début : </Label>
                              <Input id="date" name="date"  type="date" className="form-control"  />
                            </div>
                          </div>
                          <div className="col-lg-3">
                            <div className="mb-3" >
                              <Label className="form-label" htmlFor="date"  >  Date fin </Label>
                              <Input id="date" name="date"  type="date" className="form-control"  />
                            </div>
                          </div>
                          <div className="col-lg-2">
                            <div className="mb-3" >
                              <Label className="form-label" htmlFor="pointage"  >  Entreprise </Label>
                              <select className="form-select">

                                <option>All</option>
                                <option>entreprise 1</option>
                                <option>entreprise 2</option>
                                <option>entreprise 3</option>
                                <option>entreprise 4</option>

                              </select>
                            </div>
                          </div>
                          <div className="col-lg-2">
                            <div className="mb-3" >
                              <Label className="form-label" htmlFor="pointage"  >  Personne  </Label>
                              <select className="form-select">

                                <option>All</option>
                                <option>personne 1</option>
                                <option>personne 2</option>
                                <option>personne 3</option>
                                <option>personne 4</option>

                              </select>
                            </div>
                          </div>


                          <div className="col-md-2" style={{paddingTop:"16px"}}>
                            <Button color="success"
                                    onClick={() => {setsuccess_msg(true) }} id="sa-success" type="button" className=" waves-effect waves-light mt-lg-0">
                              <i className="ri-check-line align-middle me-2"></i> Rechercher
                            </Button>
                          </div>


                        </div>


                      </Form>


                    </div>
                  </CardBody>
                </Card>
              </Col>
              <br></br>
              <Col lg={12}>
                <Card>
                  <CardBody>
                    {/* <CardTitle className="h4">Entreprises List </CardTitle> */}
                    <React.Fragment>

                      <Row>
                        <Col sm="4">
                          <div className="search-box me-2 mb-2 d-inline-block">
                          </div>
                        </Col>
                        <Col sm="8">
                          <div className="text-sm-end">
                            <Link className="btn btn-rounded btn-primary waves-effect waves-light"
                                  to="/add-pointage"
                                  role="button"
                            >
                              <i className="mdi mdi-plus me-1" />{" "} Add Pointage
                            </Link>

                          </div>
                        </Col>
                      </Row>
                      {/* start table list */}
                      <div className="table-responsive">
                        <MaterialTable
                            title=""
                            columns={[
                              { title: 'Pointage', field: 'name', defaultGroupOrder: 0 },
                              { title: "Chantier", field: 'chantier', render: rowData => <p>{rowData.chantier? rowData.chantier.code :""}</p>},

                              { title: 'Date', field: 'date' },
                              //  { title: "Salarié", field: 'personne', render: rowData => <p>{rowData.personne? rowData.personne.prenom :""}</p>},
                              {title: 'Heures',field: 'nbHeure', type: 'numeric'},
                            ]}
                            data={props.pointages}
                            options={{
                              grouping: true

                            }}
                        />
                      </div>
                      {/* End table list */}

                    </React.Fragment>



                  </CardBody>
                </Card>
              </Col>
            </Row>
          </div>
        </div>
      </React.Fragment>
  )
}

Pointage.propTypes = {
  getPointages: PropTypes.func,
  getPointagesSuccess: PropTypes.func,
  getPointagesFail: PropTypes.any,
  pointages: PropTypes.any,
  deletePointage:PropTypes.func
}

const mapStatetoProps = state => {
  const { pointages } = state.Pointage
  return { pointages}
}
const mapDispatchToProps = (dispatch) => ({
  getPointages: () => dispatch(getPointages()),
  getPointagesSuccess: () => dispatch(getPointagesSuccess()),
  getPointagesFail: () => dispatch(getPointagesFail()),
  deletePointage: (val) => dispatch(deletePointage(val)),

});
export default connect(mapStatetoProps, mapDispatchToProps)(Pointage)

