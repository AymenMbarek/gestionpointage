import MetaTags from 'react-meta-tags'
import React, { useState, forwardRef , useEffect } from "react"
import { Link } from "react-router-dom"
import SweetAlert from "react-bootstrap-sweetalert"
import {Modal, ModalHeader, ModalBody, Button,Label, CardTitle, Input, Card, Form , CardBody,Col, Row } from "reactstrap"

import Switch from "react-switch"
import pointage from "../../../assets/images/pointage.png";
import { getAllpersonnes, getChantiers, addNewPointage, getPointages} from "../../../store/actions"
import { connect } from "react-redux"
import PropTypes from "prop-types"

//Import Breadcrumb
import Breadcrumbs from "../../../components/Common/Breadcrumb"
//import './allpersonne.css';
const NewPointage = props =>{
  const handleValidSubmitNewPointage = () => {
    console.log("pointage values",form)
    props.addNewPointage(form) 
    setsuccess_msg(true)
    console.log("pass point")
  }
    const [rows1, setrows1] = useState([])
    const [rows2, setrows2] = useState([])
    function handleAddRowNested() {
        const item1 = { name1: "" }
        setrows1([...rows1, item1])
      }
    function handleAddRowNested1() {
        const item2 = { name1: "" }
        setrows2([...rows2, item2])
      }

      const [form, setForm] = useState({
      
      })
      const [allpersonne, setAllpersonne] = useState([])
      /*start useeffect*/
      useEffect(() => {
        console.log("start get",props)
       
         props.getAllpersonnes()
         props.getChantiers()
         props.getPointages()
        
               setAllpersonne(props.allpersonnes)
        console.log("props allpersonne",props)
        }, [])

    const Offsymbol = () => {
        return (
          <div  style={{   display: "flex", justifyContent: "center",
              alignItems: "center",  height: "100%",
              fontSize: 12,  color: "#fff",
              paddingRight: 2 }} >
            {" "}
            No
          </div>
        )
      }
      
      const OnSymbol = () => {
        return (
          <div  style={{   display: "flex", justifyContent: "center",
          alignItems: "center",  height: "100%",
          fontSize: 12,  color: "#fff",
          paddingRight: 2 }} >
            {" "}
            Yes
          </div>
        )
      }
      const [data_attr, setdata_attr] = useState(56)
      const [switch3, setswitch3] = useState(true)      
  
  const [success_msg, setsuccess_msg] = useState(false)
  const [success_dlg, setsuccess_dlg] = useState(false)
  const [confirm_alert, setconfirm_alert] = useState(false) 

  const [modal_standard, setmodal_standard] = React.useState(false)
  function tog_standard() {
    setmodal_standard(!modal_standard)
  
  }

  
  return (
    <React.Fragment>
      <div className="page-content">
        <MetaTags>
          <title>Pointage</title>
        </MetaTags>
        <div className="container-fluid">
          <Breadcrumbs maintitle="Exploitation" title="Pointage" breadcrumbItem="Saisie" />
          <Row>
            <Col lg={12}>
              <Card>
                <CardBody>
             
                            <React.Fragment>
                 
                   <div className="form-horizontal clearfix">
                  <CardTitle className="h4">Pointage</CardTitle>
                    <hr/>
                    <Form>
                    <div className="row">
                    <div className="col-lg-8">
                            <div className="row">
                                <div className="col-lg-12">
                                <div className="mb-3" >
                                    <Label className="form-label" htmlFor="pointage"  >  Choisir chantier </Label>
                                    <select className="form-select" name="chantier" onChange={val=>setForm((prevState) => ({
                                  ...prevState,
                                  chantier: JSON.parse(val.target.value) ,
                                       }))}>
                                {props.chantiers && props.chantiers.map(chant =>{
                                           return(
                                            <option value={   JSON.stringify(chant) }>{chant.code} </option>
                                           ) 
                                         })

                                         }
                                                 
                                  </select>
                                </div>
                                </div>
                                <div className="col-lg-12">
                                <div className="mb-3" >
                                <Label className="form-label" htmlFor="date"  >  Date </Label>
                                    <Input id="date" name="date"  type="date" className="form-control" onChange={val=>setForm((prevState) => ({
                                    ...prevState,
                                    date: "2022-05-18T23:22:16.722Z"
                                    //val.target.value,
                                         }))} />
                                </div>
                                </div>
                           
                            </div> 
                            <div className="row">
                            <div className="col-lg-12">
                            <div className="inner-repeater mb-4">
                          <Label className="form-label" htmlFor="formphoneno">Sélectioner salarié</Label>
                          <table style={{ width: "100%" }}>
                            <tbody>
                              <tr id="addrMain" key="">
                                <td>
                                  <Row className="mb-2">
                                    <Col md="5">
                                    <select className="form-select" name="allpersonned" onChange={val=>
                                   {
                                console.log("jjjjj",JSON.parse( val.target.value).personneInterneId)
                                if(JSON.parse( val.target.value).personneInterneId != undefined){
                                  setForm((prevState) => ({
                                    ...prevState,
                                    personneInterne: [ JSON.parse( val.target.value)] ,
                                         }))
                                }else{
                                  setForm((prevState) => ({
                                    ...prevState,
                                    personneExterne: [ JSON.parse( val.target.value)] ,

                                         }))
                                }
                                    console.log("fffff",form)
                                    }
                                       
                                       }>
                                {allpersonne.length>0 && allpersonne.map(pers =>{
                                           return(
                                            <option value={   JSON.stringify(pers) }>{pers.prenom} </option>
                                           ) 
                                         })

                                         }
                                                 
                                  </select> 
                                    </Col>
                                    <Col md="5">
                                      <Row>
                                        <div style={{display:"flex"}}>
                                        <Col md="10"> <Input type="number" className="inner form-control" onChange={val=>setForm((prevState) => ({
                                    ...prevState,
                                    nbHeure: val.target.value,
                                         }))} /></Col>
                                      <Col md="2">
                                       <span class="input-group-text"><i class="mdi mdi-clock-outline"></i></span>
                                       </Col></div></Row>
                                    
                                    </Col>
                                    <Col md="2">
                                      <Button
                                        color="danger"
                                        className="btn-block inner"
                                        style={{ width: "100%" }}
                                        onClick={e => {
                                          handleRemoveRow(e, idx)
                                        }}
                                      >
                                        {" "}
                                        Delete{" "}
                                      </Button>
                                    </Col>
                                  </Row>
                                </td>
                              </tr>

                              {rows1.map((item1, idx) => (
                                <tr id={"nested" + idx} key={idx}>
                                   <td>
                                  <Row className="mb-2">
                                    <Col md="5">
                                    <select className="form-select" name="allpersonned" onChange={val=>
                                  {  
                                    console.log("kkkk",val.target.value)
                                   
                                    if(JSON.parse( val.target.value).personneInterneId != undefined){
                                      setForm((prevState) => ({
                                        ...prevState,
                                        personneInterne: [ JSON.parse( val.target.value)] ,

                                             }))
                                        
                                    }else{
                                      setForm((prevState) => ({
                                        ...prevState,
                                        personneExterne: [ JSON.parse( val.target.value)] ,

                                             }))
                                           
                                    }
                                       }
                                       }>
                                {allpersonne.length>0 && allpersonne.map(pers =>{
                                           return(
                                            <option value={   JSON.stringify(pers) }>{pers.prenom} </option>
                                           ) 
                                         })

                                         }
                                                 
                                  </select> 
                                    </Col>
                                    <Col md="5">
                                      <Row>
                                        <div style={{display:"flex"}}>
                                        <Col md="10"> <Input type="number" className="inner form-control" onChange={val=>setForm((prevState) => ({
                                    ...prevState,
                                    nbHeure: val.target.value,
                                         }))} /></Col>
                                      <Col md="2">
                                       <span class="input-group-text"><i class="mdi mdi-clock-outline"></i></span>
                                       </Col></div></Row>
                                    
                                    </Col>
                                    <Col md="2">
                                      <Button
                                        color="danger"
                                        className="btn-block inner"
                                        style={{ width: "100%" }}
                                        onClick={e => {
                                          handleRemoveRow(e, idx)
                                        }}
                                      >
                                        {" "}
                                        Delete{" "}
                                      </Button>
                                    </Col>
                                  </Row>
                                </td>
                                </tr>
                              ))}
                            </tbody>
                          </table>
                          <Button
                            onClick={() => {
                              handleAddRowNested()
                            }}
                            color="primary"
                            className="mt-1"
                          >
                            Add salarié
                          </Button>
                        </div>

                            </div>
                            
                           
                            </div> 
                            </div>
                            <div className="col-lg-4">
                            <img src={pointage}  alt="pointage" className='img'/> 
                                </div> 
                            
                    </div>
                              
                             
                            <div className="row">
                            <div className="col-md-7"></div>
                            <div className="col-md-5">
                            <Button color="success"
                      onClick={()=>handleValidSubmitNewPointage()}  id="sa-success" type="button" className=" waves-effect waves-light mt-lg-0">
                        <i className="ri-check-line align-middle me-2"></i> Save
                                            </Button>
                            </div>
                            </div>
                               <br></br>    
                          </Form>
                
                  
                  </div>
             
                  {success_msg ? (
                    <SweetAlert
                      title="  Save with success!"
                      success
                     
                      confirmBtnBsStyle="success"
                      
                      onConfirm={() => {
                        setsuccess_msg(false)
                      }}
                      
                    >
                    
                    </SweetAlert>
                  ) : null}
                            </React.Fragment>
                        
                   

                </CardBody>
              </Card>
            </Col>
           
          </Row>
        </div>
      </div> 
    </React.Fragment>
  )
}

NewPointage.propTypes = {
  getAllpersonnes: PropTypes.func,
  getChantiers: PropTypes.func,
  getPointages: PropTypes.func,
  addNewPointage: PropTypes.func,
}
const mapStatetoProps = state => {

  const { allpersonnes } = state.Allpersonne
  const { chantiers } = state.Chantier
  const { pointages } = state.Pointage
  return { allpersonnes,chantiers, pointages}
}
const mapDispatchToProps = (dispatch) => ({
  
  getAllpersonnes: () => dispatch(getAllpersonnes()), 
  getChantiers: () => dispatch(getChantiers()), 
  getPointages: () => dispatch(getPointages()),
  addNewPointage: (pointage) => dispatch(addNewPointage(pointage)),

});

export default connect(mapStatetoProps, mapDispatchToProps)(NewPointage)
// Just some styles
