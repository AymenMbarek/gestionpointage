import MetaTags from 'react-meta-tags'
import React, { useState, forwardRef , useEffect } from "react"
import SweetAlert from "react-bootstrap-sweetalert"
import { Button,Label, CardTitle, Input, Card, Form , CardBody,Col, Row } from "reactstrap"

import { getPersonnes, getChantiers, addNewPointage, getPointages} from "../../../store/actions"
import { connect } from "react-redux"
import PropTypes from "prop-types"

//Import Breadcrumb
import Breadcrumbs from "../../../components/Common/Breadcrumb"
import moment from "moment";
import AddSalarie from 'components/pointage/AddSalarie'
//import './personne.css';
const NewPointage = props =>{
   
//submit form
const [form, setForm] = useState([])
const [rowsData, setRowsData] = useState([]);
    const handleValidSubmitNewPointage = () => {
        console.log("tab salarier :",rowsData)
        let diff = (moment(form.heureFin,'HH:mm:ss').diff(moment(form.heureDebut,'HH:mm:ss')));
        let nbHeure = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        console.log("nb hr values",form,nbHeure)
        props.addNewPointage(form,form.nbHeure=nbHeure)
        setsuccess_msg(true)
        console.log("pass point")
    }
   

    /*start useeffect*/
    const [salarie, setSalarie] = useState()
    useEffect(() => {
        console.log("start get",props)
        props.getPersonnes()
        props.getChantiers()
        props.getPointages()
  
        console.log("props personne ssss",salarie)
    }, [])

    


    const [success_msg, setsuccess_msg] = useState(false)
    const [success_dlg, setsuccess_dlg] = useState(false)
    const [confirm_alert, setconfirm_alert] = useState(false)

    const [modal_standard, setmodal_standard] = React.useState(false)
    function tog_standard() {
        setmodal_standard(!modal_standard)

    }


    return (
        <React.Fragment>
            <div className="page-content">
                <MetaTags>
                    <title>Pointage</title>
                </MetaTags>
                <div className="container-fluid">
                    <Breadcrumbs maintitle="Exploitation" title="Pointage" breadcrumbItem="Saisie" />
                    <Row>
                        <Col lg={12}>
                            <Card>
                                <CardBody>

                                    <React.Fragment>

                                        <div className="form-horizontal clearfix">
                                       
                                            <CardTitle className="h4">Pointage</CardTitle>
                                            <hr/>
                                            <Form>
                                                <div className="row">
                                                    <div className="col-lg-10">
                                                        <div className="row">
                                                            <div className="col-lg-12">
                                                                <div className="mb-3" >
                                                                    <Label className="form-label" htmlFor="pointage"  >  Choisir chantier </Label>
                                                                    <select className="form-select" name="chantier" onChange={val=>setForm((prevState) => ({
                                                                        ...prevState,
                                                                        chantier: val.target.value ,
                                                                    }))}>
                                                                        <option >choisir un chantier </option>
                                                                        {props.chantiers["hydra:member"] && props.chantiers["hydra:member"].map(chant =>{
                                                                            return(
                                                                                <option value={"/api/chantiers/"+ chant .id} key={chant.id} >{chant.denomination} </option>
                                                                            )
                                                                        })

                                                                        }

                                                                    </select>
                                                                </div>
                                                            </div>
                                                            <div className="col-lg-12">
                                                                <div className="mb-3" >
                                                                    <Label className="form-label" htmlFor="date"  >  Date </Label>
                                                                    <Input id="date" name="date"  type="date" className="form-control" onChange={val=>setForm((prevState) => ({
                                                                        ...prevState,
                                                                        date: "2022-05-18T23:22:16.722Z"
                                                                        //val.target.value,
                                                                    }))} />
                                                                </div>
                                                            </div>

                                                        </div>
                                                        <AddSalarie dataSalarie={props.personnes["hydra:member"]} rowsData={rowsData} />
                                                    </div>


                                                </div>


                                                <div className="row">

                                                    <div className="col-md-5">
                                                        <Button color="success"
                                                                onClick={()=>handleValidSubmitNewPointage()}  id="sa-success" type="button" className=" waves-effect waves-light mt-lg-0">
                                                            <i className="ri-check-line align-middle me-2"></i> Enregistrer
                                                        </Button>
                                                    </div>
                                                </div>
                                                <br></br>
                                            </Form>


                                        </div>

                                        {success_msg ? (
                                            <SweetAlert
                                                title=" L'enregistrement a été effectué avec succès!"
                                                success

                                                confirmBtnBsStyle="success"

                                                onConfirm={() => {
                                                    setsuccess_msg(false)
                                                    props.history.replace("/pointage")
                                                }}

                                            >

                                            </SweetAlert>
                                        ) : null}
                                    </React.Fragment>



                                </CardBody>
                            </Card>
                        </Col>

                    </Row>
                </div>
            </div>
        </React.Fragment>
    )
}

NewPointage.propTypes = {
    getPersonnes: PropTypes.func,
    getChantiers: PropTypes.func,
    getPointages: PropTypes.func,
    addNewPointage: PropTypes.func,
}
const mapStatetoProps = state => {

    const { personnes } = state.Personne
    const { chantiers } = state.Chantier
    const { pointages } = state.Pointage
    return { personnes,chantiers, pointages}
}
const mapDispatchToProps = (dispatch) => ({

    getPersonnes: () => dispatch(getPersonnes()),
    getChantiers: () => dispatch(getChantiers()),
    getPointages: () => dispatch(getPointages()),
    addNewPointage: (pointage) => dispatch(addNewPointage(pointage)),

});

export default connect(mapStatetoProps, mapDispatchToProps)(NewPointage)
// Just some styles
